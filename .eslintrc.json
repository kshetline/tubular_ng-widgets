{
  "env": {
    "es2020": true,
    "mocha": true,
    "node": true
  },
  "extends": [
    "plugin:@typescript-eslint/eslint-recommended"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "chai-friendly"
  ],
  "ignorePatterns": ["dist/**/*", "**/*.html"],
  "rules": {
    "brace-style": [
      "error",
      "stroustrup",
      {
        "allowSingleLine": true
      }
    ],
    "camelcase": "off",
    "comma-dangle": [
      "error",
      {
        "arrays": "only-multiline",
        "objects": "only-multiline",
        "imports": "only-multiline",
        "exports": "only-multiline",
        "functions": "never"
      }
    ],
    "curly": "off",
    "@typescript-eslint/explicit-function-return-type": "error",
    "indent": "off",
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "ArrayExpression": "first",
        "CallExpression": { "arguments": "off" },
        "FunctionDeclaration": { "parameters": "off" },
        "FunctionExpression": { "parameters": "off" },
        "ignoreComments": true,
        "ignoredNodes": [
          "ClassProperty[value]",
          "NewExpression[arguments] :expression *",
          "TSUnionType"
        ],
        "ObjectExpression": "first",
        "SwitchCase": 1
      }
    ],
    "guard-for-in": "error",
    "key-spacing": "off",
    "multiline-ternary": "off",
    "no-control-regex": "off",
    "no-empty": "off",
    "no-labels": "off",
    "no-mixed-operators": "off",
    "no-multi-spaces": "off",
    "no-new": "off",
    "no-return-assign": "off",
    "no-unexpected-multiline": "off",
    "no-unused-expressions": "off",
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "chai-friendly/no-unused-expressions": "error",
    "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "args": "after-used",
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": false,
            "vars": "all"
          }
        ],
    "object-curly-newline": "off",
    "object-property-newline": "off",
    "one-var": "off",
    "operator-linebreak": "off",
    "semi": [
      "error",
      "always"
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true,
        "avoidEscape": true
      }
    ],
    "yoda": [
      "error",
      "never",
      {
        "exceptRange": true
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.js", "*.cjs"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    },
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": [
              "app",
              "tz"
            ],
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "arrow-parens": [
          "off",
          "always"
        ],
        "brace-style": [
          "error",
          "stroustrup",
          {
            "allowSingleLine": true
          }
        ],
        "curly": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": [
              "camelCase",
              "PascalCase",
              "snake_case",
              "UPPER_CASE"
            ],
            "filter": {
              "regex": "^alt_.+",
              "match": false
            },
            "leadingUnderscore": "allow"
          },
          {
            "selector": "enumMember",
            "format": [
              "camelCase",
              "PascalCase",
              "UPPER_CASE"
            ]
          },
          {
            "selector": "typeLike",
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": "variable",
            "format": [
              "camelCase",
              "snake_case",
              "UPPER_CASE"
            ],
            "filter": {
              "regex": "^(Mi)$",
              "match": false
            }
          }
        ],
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "allow": ["max", "min", "sign"]
          }
        ],
        "no-underscore-dangle": "off",
        "prefer-arrow/prefer-arrow-functions": "off"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}
